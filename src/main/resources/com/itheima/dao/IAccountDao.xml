<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itheima.dao.IAccountDao">
    <!--    3.2 二级缓存的开启与关闭-->
    <!--    2、第二步：映射文件支持二级缓存-->
    <!-- 启动当前命名空间的二级缓存 -->
    <cache></cache>

    <!-- 一对一查询 定义封装account和user的resultMap -->
    <resultMap id="accountUserMap" type="com.itheima.domain.Account">
        <!--配置a.id as aid, a.uid, a.money   也就是account3个字段的列名映射    -->
        <id property="id" column="aid"/>
        <result property="uid" column="uid"/>
        <result property="money" column="money"/>
        <!-- 一对一的关系映射，配置封装user的内容 ，1对1，所以用关键字association -->
        <association property="user" column="uid" javaType="user">
            <!--配置 u.*   也就是user所有字段的列名映射    -->
            <id property="id" column="id"/>
            <result property="username" column="username"/>
            <result property="address" column="address"/>
            <result property="sex" column="sex"/>
            <result property="birthday" column="birthday"/>
        </association>
    </resultMap>

    <!--配置查询所有-->
    <select id="findAll" resultMap="accountUserMap">
        select u.*, a.id as aid, a.uid, a.money from account a, user u where u.id = a.uid;
    </select>



    <!-- 一对多查询 1个user对多个account   -->
    <!--定义 user 的 resultMap -->
    <resultMap id="userAccountMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
        <!--配置user对象account集合（关键字collection）的映射
            ofType集合中元素的类型-->
        <collection property="accounts" ofType="account">
            <id column="aid" property="id" ></id>
            <result column="uid" property="uid"></result>
            <result column="money" property="money"></result>
        </collection>
    </resultMap>

    <!--配置查询所有-->
    <select id="findAll2" resultMap="userAccountMap">
        select u.*, a.id as aid, a.uid, a.money from user u left outer join account a on u.id = a.uid
    </select>

    <!--    3.2 二级缓存的开启与关闭-->
    <!--    3、第三步：让当前的操作支持二级缓存-->
    <!--根据id查询用户，添加 useCache 属性，并指定为true-->
    <select id="findById" parameterType="INT" resultType="user" useCache="true">
        select * from user where id = #{id}
    </select>

</mapper>

